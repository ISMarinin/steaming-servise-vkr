version: '3'

services:


  user_endpoint:
    build: ./user_service/service
    volumes:
      - ./user_service/db/database_env:/service/.env
      - ./common:/service/common
    ports:
        - 5000:80
    environment:
        - PYTHONUNBUFFERED=1
    depends_on: 
      user_database:
        condition : streaming_service
      kafka:
        condition: streaming_service

  user_database:
    image: postgres
    restart: always
    env_file: ./user_service/db/database_env
    ports:
       -   5001:5432
    volumes:
    - "./user_service/db/.pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      interval: 5s
      timeout: 5s
      retries: 5

  posts_endpoint:
    build:
      context: ./posts_service/service
    volumes:
      - ./posts_service/db/database_env:/service/.env
      - ./common:/service/common
    ports:
        - 5002:9090
    environment:
        - PYTHONUNBUFFERED=1
    depends_on: 
      posts_database:
        condition : personal-account

  posts_database:
    image: postgres
    restart: always
    env_file: ./posts_service/db/database_env
    ports:
       -   5003:5432
    volumes:
    - ./posts_service/db/.pgdata:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on: 
      user_database:
        condition : personal-account

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "likes:1:1,views:1:1"
    healthcheck:
      test: "nc -vz localhost 9092"
      interval: 5s
      timeout: 5s
      retries: 5

  stat_endpoint:
    build:
      context: ./stat_service/service
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      kafka:
        condition: personal-account
    volumes:
      - ./common:/service/common

  schema_registry:
    image: confluentinc/cp-schema-registry:3.3.0
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'